{
  "configById": {
    "Plot!1u5bb0v": {
      "paths": [
        {
          "value": "{{env "NAMESPACE"}}/imu_broadcaster/imu.orientation.w",
          "enabled": true,
          "timestampMethod": "receiveTime"
        },
        {
          "value": "{{env "NAMESPACE"}}/imu_broadcaster/imu.orientation.x",
          "enabled": true,
          "timestampMethod": "receiveTime"
        },
        {
          "value": "{{env "NAMESPACE"}}/imu_broadcaster/imu.orientation.y",
          "enabled": true,
          "timestampMethod": "receiveTime"
        },
        {
          "value": "{{env "NAMESPACE"}}/imu_broadcaster/imu.orientation.z",
          "enabled": true,
          "timestampMethod": "receiveTime"
        }
      ],
      "minYValue": -1.1,
      "maxYValue": 1.1,
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": false,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Plot",
      "followingViewWidth": 30
    },
    "RosOut!b0toow": {
      "searchTerms": [],
      "minLogLevel": 2
    },
    "3D!35ddy4i": {
      "cameraState": {
        "perspective": true,
        "distance": 1.7051518066851792,
        "phi": 70.94152830565065,
        "thetaOffset": -47.601655986788806,
        "targetOffset": [
          0.9445977007246766,
          0.5230703383073542,
          -3.228938942816878e-17
        ],
        "target": [
          0,
          0,
          0
        ],
        "targetOrientation": [
          0,
          0,
          0,
          1
        ],
        "fovy": 45,
        "near": 0.5,
        "far": 5000
      },
      "followMode": "follow-pose",
      "followTf": "odom",
      "scene": {
        "meshUpAxis": "z_up"
      },
      "transforms": {
        "frame:base_link": {
          "visible": false
        },
        "frame:body_link": {
          "visible": false
        },
        "frame:camera_link": {
          "visible": false
        },
        "frame:camera_color_frame": {
          "visible": false
        },
        "frame:camera_color_optical_frame": {
          "visible": false
        },
        "frame:camera_depth_frame": {
          "visible": false
        },
        "frame:camera_depth_optical_frame": {
          "visible": false
        },
        "frame:camera_orbbec_astra_link": {
          "visible": false
        },
        "frame:cover_link": {
          "visible": false
        },
        "frame:slamtec_rplidar_a2_link": {
          "visible": false
        },
        "frame:laser": {
          "visible": false
        },
        "frame:fl_range": {
          "visible": false
        },
        "frame:fl_wheel_link": {
          "visible": false
        },
        "frame:fr_range": {
          "visible": false
        },
        "frame:fr_wheel_link": {
          "visible": false
        },
        "frame:imu_link": {
          "visible": false
        },
        "frame:rl_range": {
          "visible": false
        },
        "frame:rl_wheel_link": {
          "visible": false
        },
        "frame:rr_range": {
          "visible": false
        },
        "frame:rr_wheel_link": {
          "visible": false
        },
        "frame:odom": {
          "visible": true
        },
        "frame:end_effector_link": {
          "visible": false
        },
        "frame:gripper_left_link": {
          "visible": false
        },
        "frame:gripper_right_link": {
          "visible": false
        },
        "frame:link1": {
          "visible": false
        },
        "frame:link2": {
          "visible": false
        },
        "frame:link3": {
          "visible": false
        },
        "frame:link4": {
          "visible": false
        },
        "frame:link5": {
          "visible": false
        },
        "frame:antenna_connector_link": {
          "visible": false
        },
        "frame:antenna_link": {
          "visible": false
        },
        "frame:slamtec_rplidar_link": {
          "visible": false
        }
      },
      "topics": {
        "{{env "NAMESPACE"}}/scan": {
          "visible": true,
          "colorField": "intensity",
          "colorMode": "colormap",
          "colorMap": "turbo",
          "pointSize": 9
        }
      },
      "layers": {
        "55aab804-1ed4-4630-bf53-85630f57c496": {
          "visible": true,
          "frameLocked": true,
          "label": "URDF",
          "instanceId": "55aab804-1ed4-4630-bf53-85630f57c496",
          "layerId": "foxglove.Urdf",
          "sourceType": "topic",
          "url": "",
          "filePath": "",
          "parameter": "",
          "topic": "{{env "NAMESPACE"}}/robot_description",
          "framePrefix": "",
          "displayMode": "auto",
          "fallbackColor": "#ffffff",
          "order": 1
        }
      },
      "publish": {
        "type": "point",
        "poseTopic": "{{env "NAMESPACE"}}/move_base_simple/goal",
        "pointTopic": "{{env "NAMESPACE"}}/clicked_point",
        "poseEstimateTopic": "{{env "NAMESPACE"}}/initialpose",
        "poseEstimateXDeviation": 0.5,
        "poseEstimateYDeviation": 0.5,
        "poseEstimateThetaDeviation": 0.26179939
      },
      "imageMode": {}
    },
    "Joy!3rd0uxh": {
      "topic": "{{env "NAMESPACE"}}/cmd_vel",
      "publishRate": 20,
      "xAxis": {
        "field": "linear-x",
        "initial": 0.8,
        "limit": 1
      },
      "yAxis": {
        "field": "angular-z",
        "initial": 0.8,
        "limit": 1
      },
      "stamped": {{env "CMD_VEL_STAMPED"}},
      "advanced": false,
      "frameId": ""
    },
    "Tab!2qhku9u": {
      "activeTabIdx": 0,
      "tabs": [
        {
          "title": "IMU Plots",
          "layout": "Plot!1u5bb0v"
        }
      ]
    },
    "Gauge!4jffafa": {
      "path": "/battery_state.voltage",
      "minValue": 9.8,
      "maxValue": 12.6,
      "colorMap": "turbo",
      "colorMode": "colormap",
      "gradient": [
        "#0000ff",
        "#ff00ff"
      ],
      "reverse": false,
      "foxglovePanelTitle": "Battery"
    },
    "Indicator!11kizr9": {
      "path": "/battery_state.voltage",
      "style": "background",
      "fallbackColor": "#000000",
      "fallbackLabel": "Battery Ok",
      "rules": [
        {
          "operator": "<",
          "rawValue": "10.8",
          "color": "#ff0000",
          "label": "Plug charger!"
        }
      ],
      "foxglovePanelTitle": "Plug Charger Info"
    },
    "Plot!4dl4s92": {
      "paths": [
        {
          "value": "/battery_state.voltage",
          "enabled": true,
          "timestampMethod": "receiveTime"
        }
      ],
      "minYValue": 9.482842712474614,
      "maxYValue": 13,
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": false,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": true,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Voltage [V]",
      "followingViewWidth": 60
    }
  },
  "globalVariables": {
    "globalVariable": 7
  },
  "userNodes": {
    "9d38e45d-b7a9-48fd-947a-5bf813319343": {
      "sourceCode": "// The ./types module provides helper types for your Input events and messages.\nimport { Input, Message } from \"./types\";\n\n// Your script can output well-known message types, any of your custom message types, or\n// complete custom message types.\n//\n// Use `Message` to access your data source types or well-known types:\n// type Twist = Message<\"geometry_msgs/Twist\">;\n//\n// Conventionally, it's common to make a _type alias_ for your script's output type\n// and use that type name as the return type for your script function.\n// Here we've called the type `Output` but you can pick any type name.\ntype Output = {\n  hello: string;\n};\n\n// These are the topics your script \"subscribes\" to. Studio will invoke your script function\n// when any message is received on one of these topics.\nexport const inputs = [\"/input/topic\"];\n\n// Any output your script produces is \"published\" to this topic. Published messages are only visible within Studio, not to your original data source.\nexport const output = \"/studio_script/output_topic\";\n\n// This function is called with messages from your input topics.\n// The first argument is an event with the topic, receive time, and message.\n// Use the `Input<...>` helper to get the correct event type for your input topic messages.\nexport default function script(event: Input<\"/input/topic\">): Output {\n  return {\n    hello: \"world!\",\n  };\n};",
      "name": "9d38e45d"
    }
  },
  "playbackConfig": {
    "speed": 1
  },
  "layout": {
    "first": {
      "first": "RosOut!b0toow",
      "second": "3D!35ddy4i",
      "direction": "row",
      "splitPercentage": 45.436766623207305
    },
    "second": {
      "first": {
        "first": "Joy!3rd0uxh",
        "second": "Tab!2qhku9u",
        "direction": "row",
        "splitPercentage": 54.477004700540185
      },
      "second": {
        "first": "Gauge!4jffafa",
        "second": {
          "first": "Indicator!11kizr9",
          "second": "Plot!4dl4s92",
          "direction": "column",
          "splitPercentage": 27.96178343949043
        },
        "direction": "column",
        "splitPercentage": 27.816091954022994
      },
      "direction": "row",
      "splitPercentage": 83.4054054054054
    },
    "direction": "column",
    "splitPercentage": 54.02298850574713
  }
}